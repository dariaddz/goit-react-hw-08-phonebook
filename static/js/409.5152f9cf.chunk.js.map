{"version":3,"file":"static/js/409.5152f9cf.chunk.js","mappings":"mJACA,EAA2B,6BAA3B,EAAgE,0BAAhE,EAAkG,0BAAlG,EAAqI,2B,uCCkFrI,MA9EA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACHC,EAAQO,GACR,MACF,IAAK,QACHL,EAASK,GACT,MACF,IAAK,WACHH,EAAYG,GACZ,MACF,QACE,SAaN,OACE,+BACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMC,SAZS,SAAAC,GACnBA,EAAIC,iBACJhB,EAASiB,EAAAA,EAAAA,SAAwB,CAAEd,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAEhDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAMsBU,aAAa,MAA3C,WACE,sCACA,mBAAON,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXM,KAAK,OACLhB,KAAK,OACLQ,MAAOR,EACPiB,SAAUX,QAId,mBAAOG,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXM,KAAK,QACLhB,KAAK,QACLQ,MAAON,EACPe,SAAUX,QAId,mBAAOG,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXM,KAAK,WACLhB,KAAK,WACLQ,MAAOJ,EACPa,SAAUX,QAId,mBAAQG,UAAWC,EAAWM,KAAK,SAAnC","sources":["webpack:///./src/views/SignUpView/SignUpView.module.css?1d78","views/SignUpView/SignUpView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"authView\":\"SignUpView_authView__mqaB2\",\"label\":\"SignUpView_label__iIgZa\",\"input\":\"SignUpView_input__SLsF7\",\"button\":\"SignUpView_button__vbUqP\"};","import st from './SignUpView.module.css';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../../redux/auth/auth-operations';\n\nfunction SignUpView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <div className={st.authView}>\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\n          <h2> Sign Up</h2>\n          <label className={st.label}>\n            Name\n            <input\n              className={st.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n            />\n          </label>\n\n          <label className={st.label}>\n            Email\n            <input\n              className={st.input}\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n            />\n          </label>\n\n          <label className={st.label}>\n            Password\n            <input\n              className={st.input}\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n            />\n          </label>\n\n          <button className={st.button} type=\"submit\">\n            Sign Up\n          </button>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default SignUpView;\n"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","className","st","onSubmit","evt","preventDefault","authOperations","autoComplete","type","onChange"],"sourceRoot":""}